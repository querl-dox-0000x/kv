image: "registry.gitlab.com/querl.dox/elixir/build:dev-image"

cache:
  paths:
    #- ./node_modules
    #- ./vendor

stages:
  - development
  - test
  - build
  - deploy

variables:
  CI_GIT_TOKEN: "_zZas_5s8Rxs35Qe_RyS"
  ELIXIR_PROJECT: "kv"
  ELIXIR_MODULE: "KV"
  MIX_DIR: "/tmp/$ELIXIR_PROJECT"
  
before_script:
  - git config --global credential.helper cache
  - git config --global user.email querl.dox.protonmail.com
  - git config --global user.name querl.dox

version_check:
  stage: test
  environment:
    name: development
  when: manual
  script:
    - elixir --version
    - mix --version
    - erlang --version
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /vc/  
    
mix_test:
  stage: test
  environment:
    name: development
  script:
    - mix test
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /mix test/  

mix_compile:
  stage: test
  environment:
    name: development
  script:
    - mix compile
    - ls ./_build
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /mix compile/  
    
code_review:
  artifacts:
    name: "code_review"
    expire_in: "1 day"
    paths:
      #- $PUB_DIR
      #- $DEV_DIR
  variables:
    CI_COMMIT_TAG: "code_review"
  stage: build
  script: 
    - mix compile
    - ls -a -R ./
    - git add .
    - git commit -m "Elixir Project Compile"
    - git push --force "https://${GITLAB_USER_NAME}:${CI_GIT_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:$CI_COMMIT_TAG"
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /code review/   
    
new_project:
  artifacts:
    name: "elixir_project"
    expire_in: "1 day"
    paths:
      #- $PUB_DIR
      #- $DEV_DIR
  variables:
    CI_COMMIT_TAG: "mix-project"
  stage: build
  script: 
    - mix new $MIX_DIR $ELIXIR_PROJECT --module $ELIXIR_MODULE
    - cd $MIX_DIR
    - ls -a -R "$MIX_DIR"
    - git init
    - git add .
    - git commit -m "New Elixir Project"
    - git push --force "https://${GITLAB_USER_NAME}:${CI_GIT_TOKEN}@${CI_REPOSITORY_URL#*@}" "HEAD:$CI_COMMIT_TAG"
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /mix project/   

pages:
  when: manual
  artifacts:
    name: "pages"
    expire_in: "1 day"
    paths:
      - public
  cache:
    paths:
      - ./vendor
  stage: deploy
  script: 
    - cp ./src/index.html $PUB_DIR/index.html
    - tsc --project pages-tsconfig.json --showConfig true
    - tsc --project pages-tsconfig.json
  only:
    variables:
    - $CI_COMMIT_MESSAGE =~ /pages/ 